{
  "version": 3,
  "sources": ["browser-external:crypto", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/EndpointsBase.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/AlbumsEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/ArtistsEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/AudiobooksEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/BrowseEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/ChaptersEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/EpisodesEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/RecommendationsEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/MarketsEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/PlayerEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/PlaylistsEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/SearchEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/ShowsEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/TracksEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/IAuthStrategy.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/UsersEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/CurrentUserEndpoints.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/Crypto.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/AccessTokenHelpers.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/ClientCredentialsStrategy.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/ImplicitGrantStrategy.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/AuthorizationCodeWithPKCEStrategy.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/serialization/DefaultResponseDeserializer.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/responsevalidation/DefaultResponseValidator.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/errorhandling/NoOpErrorHandler.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/redirection/DocumentLocationRedirectionStrategy.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/caching/GenericCache.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/caching/LocalStorageCachingStrategy.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/caching/InMemoryCachingStrategy.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/ProvidedAccessTokenStrategy.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/SpotifyApi.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/errorhandling/ConsoleLoggingErrorHandler.js", "../../../../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/Scopes.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "export default class EndpointsBase {\n    api;\n    constructor(api) {\n        this.api = api;\n    }\n    async getRequest(url) {\n        return await this.api.makeRequest(\"GET\", url);\n    }\n    async postRequest(url, body, contentType = undefined) {\n        return await this.api.makeRequest(\"POST\", url, body, contentType);\n    }\n    async putRequest(url, body, contentType = undefined) {\n        return await this.api.makeRequest(\"PUT\", url, body, contentType);\n    }\n    async deleteRequest(url, body) {\n        return await this.api.makeRequest(\"DELETE\", url, body);\n    }\n    paramsFor(args) {\n        const params = new URLSearchParams();\n        for (let key of Object.getOwnPropertyNames(args)) {\n            if (args[key] || (args[key] === 0) || (!args[key] && typeof args[key] === 'boolean')) {\n                params.append(key, args[key].toString());\n            }\n        }\n        return [...params].length > 0 ? `?${params.toString()}` : \"\";\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class AlbumsEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            const album = await this.getRequest(`albums/${idOrIds}${params}`);\n            return album;\n        }\n        const params = this.paramsFor({ ids: idOrIds, market });\n        // TODO: only returns top 20, validate here\n        const response = await this.getRequest(`albums${params}`);\n        return response.albums;\n    }\n    tracks(albumId, market, limit, offset) {\n        const params = this.paramsFor({ market, limit, offset });\n        return this.getRequest(`albums/${albumId}/tracks${params}`);\n    }\n}\n", "import EndpointsBase from \"./EndpointsBase.js\";\nexport default class ArtistsEndpoints extends EndpointsBase {\n    async get(idOrIds) {\n        if (typeof idOrIds === \"string\") {\n            const artist = this.getRequest(`artists/${idOrIds}`);\n            return artist;\n        }\n        const params = this.paramsFor({ ids: idOrIds });\n        const response = await this.getRequest(`artists${params}`);\n        return response.artists;\n    }\n    albums(id, includeGroups, market, limit, offset) {\n        const params = this.paramsFor({\n            include_groups: includeGroups,\n            market,\n            limit,\n            offset,\n        });\n        return this.getRequest(`artists/${id}/albums${params}`);\n    }\n    topTracks(id, market) {\n        // BUG: market is flagged as optional in the docs, but it's actually required for this endpoint\n        // otherwise you get a 400\n        const params = this.paramsFor({ market });\n        return this.getRequest(`artists/${id}/top-tracks${params}`);\n    }\n    relatedArtists(id) {\n        return this.getRequest(`artists/${id}/related-artists`);\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class AudiobooksEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`audiobooks/${idOrIds}${params}`);\n        }\n        const params = this.paramsFor({ ids: idOrIds, market });\n        const response = await this.getRequest(`audiobooks${params}`);\n        return response.audiobooks;\n    }\n    getAudiobookChapters(id, market, limit, offset) {\n        const params = this.paramsFor({ market, limit, offset });\n        return this.getRequest(`audiobooks/${id}/chapters${params}`);\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class BrowseEndpoints extends EndpointsBase {\n    getCategories(country, locale, limit, offset) {\n        const params = this.paramsFor({ country, locale, limit, offset });\n        return this.getRequest(`browse/categories${params}`);\n    }\n    getCategory(categoryId, country, locale) {\n        const params = this.paramsFor({ country, locale });\n        return this.getRequest(`browse/categories/${categoryId}${params}`);\n    }\n    getNewReleases(country, limit, offset) {\n        const params = this.paramsFor({ country, limit, offset });\n        return this.getRequest(`browse/new-releases${params}`);\n    }\n    getFeaturedPlaylists(country, locale, timestamp, limit, offset) {\n        const params = this.paramsFor({ country, locale, timestamp, limit, offset });\n        return this.getRequest(`browse/featured-playlists${params}`);\n    }\n    getPlaylistsForCategory(category_id, country, limit, offset) {\n        const params = this.paramsFor({ country, limit, offset });\n        return this.getRequest(`browse/categories/${category_id}/playlists${params}`);\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class ChaptersEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`chapters/${idOrIds}${params}`);\n        }\n        // TODO: Only returns top 50, validate / pre-check here\n        const params = this.paramsFor({ ids: idOrIds, market });\n        const response = await this.getRequest(`chapters${params}`);\n        return response.chapters;\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class EpisodesEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`episodes/${idOrIds}${params}`);\n        }\n        const params = this.paramsFor({ ids: idOrIds, market });\n        const response = await this.getRequest(`episodes${params}`);\n        return response.episodes;\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class RecommendationsEndpoints extends EndpointsBase {\n    get(request) {\n        const params = this.paramsFor(request);\n        return this.getRequest(`recommendations${params}`);\n    }\n    genreSeeds() {\n        return this.getRequest('recommendations/available-genre-seeds');\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class MarketsEndpoints extends EndpointsBase {\n    getAvailableMarkets() {\n        return this.getRequest('markets');\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class PlayerEndpoints extends EndpointsBase {\n    getPlaybackState(market, additional_types) {\n        const params = this.paramsFor({ market, additional_types });\n        return this.getRequest(`me/player${params}`);\n    }\n    getAvailableDevices() {\n        return this.getRequest('me/player/devices');\n    }\n    getCurrentlyPlayingTrack(market, additional_types) {\n        const params = this.paramsFor({ market, additional_types });\n        return this.getRequest(`me/player/currently-playing${params}`);\n    }\n    getRecentlyPlayedTracks(limit, queryRange) {\n        const paramObj = { limit };\n        if (queryRange) {\n            if (queryRange.type === \"before\") {\n                paramObj.before = queryRange.timestamp;\n            }\n            else if (queryRange.type === \"after\") {\n                paramObj.after = queryRange.timestamp;\n            }\n        }\n        const params = this.paramsFor(paramObj);\n        return this.getRequest(`me/player/recently-played${params}`);\n    }\n    getUsersQueue() {\n        return this.getRequest('me/player/queue');\n    }\n    async transferPlayback(device_ids, play) {\n        if (device_ids.length > 1) {\n            throw new Error(\"Although an array is accepted, only a single device_id is currently supported. Supplying more than one will return 400 Bad Request\");\n        }\n        await this.putRequest('me/player', { device_ids, play });\n    }\n    async startResumePlayback(device_id, context_uri, uris, offset, positionMs) {\n        const params = this.paramsFor({ device_id });\n        await this.putRequest(`me/player/play${params}`, { context_uri, uris, offset, positionMs });\n    }\n    async pausePlayback(device_id) {\n        const params = this.paramsFor({ device_id });\n        await this.putRequest(`me/player/pause${params}`);\n    }\n    async skipToNext(device_id) {\n        const params = this.paramsFor({ device_id });\n        await this.postRequest(`me/player/next${params}`);\n    }\n    async skipToPrevious(device_id) {\n        const params = this.paramsFor({ device_id });\n        await this.postRequest(`me/player/previous${params}`);\n    }\n    async seekToPosition(position_ms, device_id) {\n        const params = this.paramsFor({ position_ms, device_id });\n        await this.putRequest(`me/player/seek${params}`);\n    }\n    async setRepeatMode(state, device_id) {\n        const params = this.paramsFor({ state, device_id });\n        await this.putRequest(`me/player/repeat${params}`);\n    }\n    async setPlaybackVolume(volume_percent, device_id) {\n        const params = this.paramsFor({ volume_percent, device_id });\n        await this.putRequest(`me/player/volume${params}`);\n    }\n    async togglePlaybackShuffle(state, device_id) {\n        const params = this.paramsFor({ state, device_id });\n        await this.putRequest(`me/player/shuffle${params}`);\n    }\n    async addItemToPlaybackQueue(uri, device_id) {\n        const params = this.paramsFor({ uri, device_id });\n        await this.postRequest(`me/player/queue${params}`);\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class PlaylistsEndpoints extends EndpointsBase {\n    getPlaylist(playlist_id, market, fields, additional_types) {\n        // TODO: better support for fields\n        const params = this.paramsFor({ market, fields, additional_types: additional_types?.join(',') });\n        return this.getRequest(`playlists/${playlist_id}${params}`);\n    }\n    getPlaylistItems(playlist_id, market, fields, limit, offset, additional_types) {\n        // TODO: better support for fields\n        const params = this.paramsFor({ market, fields, limit, offset, additional_types: additional_types?.join(',') });\n        return this.getRequest(`playlists/${playlist_id}/tracks${params}`);\n    }\n    async changePlaylistDetails(playlist_id, request) {\n        await this.putRequest(`playlists/${playlist_id}`, request);\n    }\n    movePlaylistItems(playlist_id, range_start, range_length, moveToPosition) {\n        return this.updatePlaylistItems(playlist_id, {\n            range_start,\n            range_length,\n            insert_before: moveToPosition\n        });\n    }\n    updatePlaylistItems(playlist_id, request) {\n        return this.putRequest(`playlists/${playlist_id}/tracks`, request);\n    }\n    async addItemsToPlaylist(playlist_id, uris, position) {\n        await this.postRequest(`playlists/${playlist_id}/tracks`, { position, uris: uris });\n    }\n    async removeItemsFromPlaylist(playlist_id, request) {\n        await this.deleteRequest(`playlists/${playlist_id}/tracks`, request);\n    }\n    getUsersPlaylists(user_id, limit, offset) {\n        const params = this.paramsFor({ limit, offset });\n        return this.getRequest(`users/${user_id}/playlists${params}`);\n    }\n    createPlaylist(user_id, request) {\n        return this.postRequest(`users/${user_id}/playlists`, request);\n    }\n    getPlaylistCoverImage(playlist_id) {\n        return this.getRequest(`playlists/${playlist_id}/images`);\n    }\n    async addCustomPlaylistCoverImage(playlist_id, imageData) {\n        let base64EncodedJpeg = \"\";\n        if (imageData instanceof Buffer) {\n            base64EncodedJpeg = imageData.toString(\"base64\");\n        }\n        else if (imageData instanceof HTMLCanvasElement) {\n            base64EncodedJpeg = imageData.toDataURL(\"image/jpeg\").split(';base64,')[1];\n        }\n        else if (imageData instanceof HTMLImageElement) {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = imageData.width;\n            canvas.height = imageData.height;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) {\n                throw new Error(\"Could not get canvas context\");\n            }\n            ctx.drawImage(imageData, 0, 0);\n            base64EncodedJpeg = canvas.toDataURL(\"image/jpeg\").split(';base64,')[1];\n        }\n        else if (typeof imageData === \"string\") {\n            base64EncodedJpeg = imageData;\n        }\n        else {\n            throw new Error(\"ImageData must be a Buffer, HTMLImageElement, HTMLCanvasElement, or string containing a base64 encoded jpeg\");\n        }\n        await this.addCustomPlaylistCoverImageFromBase64String(playlist_id, base64EncodedJpeg);\n    }\n    async addCustomPlaylistCoverImageFromBase64String(playlist_id, base64EncodedJpeg) {\n        await this.putRequest(`playlists/${playlist_id}/images`, base64EncodedJpeg, \"image/jpeg\");\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class SearchEndpoints extends EndpointsBase {\n    async execute(q, type, market, limit, offset, include_external) {\n        const params = this.paramsFor({ q, type, market, limit, offset, include_external });\n        return await this.getRequest(`search${params}`);\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class ShowsEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`shows/${idOrIds}${params}`);\n        }\n        // TODO: only returns 50, validate here\n        const params = this.paramsFor({ ids: idOrIds, market });\n        const response = await this.getRequest(`shows${params}`);\n        return response.shows;\n    }\n    episodes(id, market, limit, offset) {\n        const params = this.paramsFor({ market, limit, offset });\n        return this.getRequest(`shows/${id}/episodes${params}`);\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class TracksEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`tracks/${idOrIds}${params}`);\n        }\n        const params = this.paramsFor({ ids: idOrIds, market });\n        // TODO: only returns top 20, validate here\n        const response = await this.getRequest(`tracks${params}`);\n        return response.tracks;\n    }\n    async audioFeatures(idOrIds) {\n        if (typeof idOrIds === 'string') {\n            return this.getRequest(`audio-features/${idOrIds}`);\n        }\n        const params = this.paramsFor({ ids: idOrIds });\n        const response = await this.getRequest(`audio-features${params}`);\n        return response.audio_features;\n    }\n    audioAnalysis(id) {\n        return this.getRequest(`audio-analysis/${id}`);\n    }\n}\n", "export const emptyAccessToken = { access_token: \"emptyAccessToken\", token_type: \"\", expires_in: 0, refresh_token: \"\", expires: -1 };\nexport function isEmptyAccessToken(value) {\n    return value === emptyAccessToken;\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class UsersEndpoints extends EndpointsBase {\n    profile(userId) {\n        return this.getRequest(`users/${userId}`);\n    }\n}\n", "import EndpointsBase from './EndpointsBase.js';\nexport default class CurrentUserEndpoints extends EndpointsBase {\n    albums;\n    audiobooks;\n    episodes;\n    playlists;\n    shows;\n    tracks;\n    constructor(api) {\n        super(api);\n        this.albums = new CurrentUserAlbumsEndpoints(api);\n        this.audiobooks = new CurrentUserAudiobooksEndpoints(api);\n        this.episodes = new CurrentUserEpisodesEndpoints(api);\n        this.playlists = new CurrentUserPlaylistsEndpoints(api);\n        this.shows = new CurrentUserShowsEndpoints(api);\n        this.tracks = new CurrentUserTracksEndpoints(api);\n    }\n    profile() {\n        return this.getRequest('me');\n    }\n    topItems(type, time_range, limit, offset) {\n        const params = this.paramsFor({ time_range, limit, offset });\n        return this.getRequest(`me/top/${type}${params}`);\n    }\n    followedArtists(after, limit) {\n        const params = this.paramsFor({ type: \"artist\", after, limit });\n        return this.getRequest(`me/following${params}`);\n    }\n    async followArtistsOrUsers(ids, type) {\n        const params = this.paramsFor({ type });\n        await this.putRequest(`me/following${params}`, { ids });\n    }\n    async unfollowArtistsOrUsers(ids, type) {\n        const params = this.paramsFor({ type });\n        await this.deleteRequest(`me/following${params}`, { ids });\n    }\n    followsArtistsOrUsers(ids, type) {\n        const params = this.paramsFor({ ids, type });\n        return this.getRequest(`me/following/contains${params}`);\n    }\n}\nclass CurrentUserAlbumsEndpoints extends EndpointsBase {\n    savedAlbums(limit, offset, market) {\n        const params = this.paramsFor({ limit, offset, market });\n        return this.getRequest(`me/albums${params}`);\n    }\n    async saveAlbums(ids) {\n        await this.putRequest('me/albums', ids);\n    }\n    async removeSavedAlbums(ids) {\n        await this.deleteRequest('me/albums', ids);\n    }\n    hasSavedAlbums(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/albums/contains${params}`);\n    }\n}\nclass CurrentUserAudiobooksEndpoints extends EndpointsBase {\n    savedAudiobooks(limit, offset) {\n        const params = this.paramsFor({ limit, offset });\n        return this.getRequest(`me/audiobooks${params}`);\n    }\n    async saveAudiobooks(ids) {\n        await this.putRequest('me/audiobooks', ids);\n    }\n    async removeSavedAudiobooks(ids) {\n        await this.deleteRequest('me/audiobooks', ids);\n    }\n    hasSavedAudiobooks(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/audiobooks/contains${params}`);\n    }\n}\nclass CurrentUserEpisodesEndpoints extends EndpointsBase {\n    savedEpisodes(market, limit, offset) {\n        const params = this.paramsFor({ market, limit, offset });\n        return this.getRequest(`me/episodes${params}`);\n    }\n    async saveEpisodes(ids) {\n        await this.putRequest(`me/episodes`, ids);\n    }\n    async removeSavedEpisodes(ids) {\n        await this.deleteRequest(`me/episodes`, ids);\n    }\n    hasSavedEpisodes(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/episodes/contains${params}`);\n    }\n}\nclass CurrentUserPlaylistsEndpoints extends EndpointsBase {\n    playlists(limit, offset) {\n        const params = this.paramsFor({ limit, offset });\n        return this.getRequest(`me/playlists${params}`);\n    }\n    async follow(playlist_id) {\n        await this.putRequest(`playlists/${playlist_id}/followers`);\n    }\n    async unfollow(playlist_id) {\n        await this.deleteRequest(`playlists/${playlist_id}/followers`);\n    }\n    isFollowing(playlistId, ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`playlists/${playlistId}/followers/contains${params}`);\n    }\n}\nclass CurrentUserShowsEndpoints extends EndpointsBase {\n    savedShows(limit, offset) {\n        const params = this.paramsFor({ limit, offset });\n        return this.getRequest(`me/shows${params}`);\n    }\n    saveShows(ids) {\n        const params = this.paramsFor({ ids });\n        return this.putRequest(`me/shows${params}`);\n    }\n    removeSavedShows(ids, market) {\n        const params = this.paramsFor({ ids, market });\n        return this.deleteRequest(`me/shows${params}`);\n    }\n    hasSavedShow(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/shows/contains${params}`);\n    }\n}\nclass CurrentUserTracksEndpoints extends EndpointsBase {\n    savedTracks(limit, offset, market) {\n        const params = this.paramsFor({ limit, offset, market });\n        return this.getRequest(`me/tracks${params}`);\n    }\n    async saveTracks(ids) {\n        await this.putRequest('me/tracks', ids);\n    }\n    async removeSavedTracks(ids) {\n        await this.deleteRequest('me/tracks', ids);\n    }\n    hasSavedTracks(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/tracks/contains${params}`);\n    }\n}\n", "export class Crypto {\n    static get current() {\n        return this.hasSubtleCrypto ? window.crypto : this.tryLoadNodeWebCrypto();\n    }\n    static get hasSubtleCrypto() {\n        return typeof window !== 'undefined' && typeof window.crypto !== 'undefined' && typeof window.crypto.subtle !== 'undefined';\n    }\n    static tryLoadNodeWebCrypto() {\n        try {\n            // Deliberately avoid bundling for browsers depending\n            // on node by doing this require during execution.\n            const { webcrypto } = require('crypto');\n            return webcrypto;\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n}\n", "import { Crypto } from \"./Crypto.js\";\nexport default class AccessTokenHelpers {\n    static async refreshCachedAccessToken(clientId, item) {\n        const updated = await AccessTokenHelpers.refreshToken(clientId, item.refresh_token);\n        return AccessTokenHelpers.toCachable(updated);\n    }\n    static toCachable(item) {\n        if (item.expires && item.expires === -1) {\n            return item;\n        }\n        return { ...item, expires: this.calculateExpiry(item) };\n    }\n    static calculateExpiry(item) {\n        return Date.now() + (item.expires_in * 1000);\n    }\n    static async refreshToken(clientId, refreshToken) {\n        const params = new URLSearchParams();\n        params.append(\"client_id\", clientId);\n        params.append(\"grant_type\", \"refresh_token\");\n        params.append(\"refresh_token\", refreshToken);\n        const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: params\n        });\n        const text = await result.text();\n        if (!result.ok) {\n            throw new Error(`Failed to refresh token: ${result.statusText}, ${text}`);\n        }\n        const json = JSON.parse(text);\n        return json;\n    }\n    static generateCodeVerifier(length) {\n        let text = '';\n        let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (let i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    }\n    static async generateCodeChallenge(codeVerifier) {\n        const data = new TextEncoder().encode(codeVerifier);\n        const digest = await Crypto.current.subtle.digest('SHA-256', data);\n        const digestBytes = [...new Uint8Array(digest)];\n        const hasBuffer = typeof Buffer !== 'undefined';\n        const digestAsBase64 = hasBuffer\n            ? Buffer.from(digest).toString('base64')\n            : btoa(String.fromCharCode.apply(null, digestBytes));\n        return digestAsBase64\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=+$/, '');\n    }\n}\n", "import AccessTokenHelpers from \"./AccessTokenHelpers.js\";\nexport default class ClientCredentialsStrategy {\n    clientId;\n    clientSecret;\n    scopes;\n    static cacheKey = \"spotify-sdk:ClientCredentialsStrategy:token\";\n    configuration = null;\n    get cache() { return this.configuration.cachingStrategy; }\n    constructor(clientId, clientSecret, scopes = []) {\n        this.clientId = clientId;\n        this.clientSecret = clientSecret;\n        this.scopes = scopes;\n    }\n    setConfiguration(configuration) {\n        this.configuration = configuration;\n    }\n    async getOrCreateAccessToken() {\n        const token = await this.cache.getOrCreate(ClientCredentialsStrategy.cacheKey, async () => {\n            const token = await this.getTokenFromApi();\n            return AccessTokenHelpers.toCachable(token);\n        }, async (_) => {\n            const refreshed = await this.getTokenFromApi();\n            return AccessTokenHelpers.toCachable(refreshed);\n        });\n        return token;\n    }\n    async getAccessToken() {\n        const token = await this.cache.get(ClientCredentialsStrategy.cacheKey);\n        return token;\n    }\n    removeAccessToken() {\n        this.cache.remove(ClientCredentialsStrategy.cacheKey);\n    }\n    async getTokenFromApi() {\n        const options = {\n            grant_type: 'client_credentials',\n            scope: this.scopes.join(' ')\n        };\n        const bodyAsString = Object.keys(options).map(key => key + '=' + options[key]).join('&');\n        const hasBuffer = typeof Buffer !== 'undefined';\n        const credentials = `${this.clientId}:${this.clientSecret}`;\n        const basicAuth = hasBuffer\n            ? Buffer.from(credentials).toString('base64')\n            : btoa(credentials);\n        const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                \"Authorization\": `Basic ${basicAuth}`\n            },\n            body: bodyAsString\n        });\n        if (result.status !== 200) {\n            throw new Error(\"Failed to get access token.\");\n        }\n        const json = await result.json();\n        return json;\n    }\n}\n", "import AccessTokenHelpers from \"./AccessTokenHelpers.js\";\nimport { emptyAccessToken } from \"./IAuthStrategy.js\";\nexport default class ImplicitGrantStrategy {\n    clientId;\n    redirectUri;\n    scopes;\n    static cacheKey = \"spotify-sdk:ImplicitGrantStrategy:token\";\n    configuration = null;\n    get cache() { return this.configuration.cachingStrategy; }\n    constructor(clientId, redirectUri, scopes) {\n        this.clientId = clientId;\n        this.redirectUri = redirectUri;\n        this.scopes = scopes;\n    }\n    setConfiguration(configuration) {\n        this.configuration = configuration;\n    }\n    async getOrCreateAccessToken() {\n        const token = await this.cache.getOrCreate(ImplicitGrantStrategy.cacheKey, async () => {\n            const token = await this.redirectOrVerifyToken();\n            return AccessTokenHelpers.toCachable(token);\n        }, async (expiring) => {\n            return AccessTokenHelpers.refreshCachedAccessToken(this.clientId, expiring);\n        });\n        return token;\n    }\n    async getAccessToken() {\n        const token = await this.cache.get(ImplicitGrantStrategy.cacheKey);\n        return token;\n    }\n    removeAccessToken() {\n        this.cache.remove(ImplicitGrantStrategy.cacheKey);\n    }\n    async redirectOrVerifyToken() {\n        const hashParams = new URLSearchParams(window.location.hash.substring(1));\n        const accessToken = hashParams.get(\"access_token\");\n        if (accessToken) {\n            return Promise.resolve({\n                access_token: accessToken,\n                token_type: hashParams.get(\"token_type\") ?? \"\",\n                expires_in: parseInt(hashParams.get(\"expires_in\") ?? \"0\"),\n                refresh_token: hashParams.get(\"refresh_token\") ?? \"\",\n                expires: Number(hashParams.get(\"expires\")) || 0\n            });\n        }\n        const scopes = this.scopes ?? [];\n        var scope = scopes.join(' ');\n        const params = new URLSearchParams();\n        params.append(\"client_id\", this.clientId);\n        params.append(\"response_type\", \"token\");\n        params.append(\"redirect_uri\", this.redirectUri);\n        params.append(\"scope\", scope);\n        const authUrl = 'https://accounts.spotify.com/authorize?' + params.toString();\n        this.configuration.redirectionStrategy.redirect(authUrl);\n        return emptyAccessToken;\n    }\n}\n", "import AccessTokenHelpers from \"./AccessTokenHelpers.js\";\nimport { emptyAccessToken } from \"./IAuthStrategy.js\";\nexport default class AuthorizationCodeWithPKCEStrategy {\n    clientId;\n    redirectUri;\n    scopes;\n    static cacheKey = \"spotify-sdk:AuthorizationCodeWithPKCEStrategy:token\";\n    configuration = null;\n    get cache() { return this.configuration.cachingStrategy; }\n    constructor(clientId, redirectUri, scopes) {\n        this.clientId = clientId;\n        this.redirectUri = redirectUri;\n        this.scopes = scopes;\n    }\n    setConfiguration(configuration) {\n        this.configuration = configuration;\n    }\n    async getOrCreateAccessToken() {\n        const token = await this.cache.getOrCreate(AuthorizationCodeWithPKCEStrategy.cacheKey, async () => {\n            const token = await this.redirectOrVerifyToken();\n            return AccessTokenHelpers.toCachable(token);\n        }, async (expiring) => {\n            return AccessTokenHelpers.refreshCachedAccessToken(this.clientId, expiring);\n        });\n        return token;\n    }\n    async getAccessToken() {\n        const token = await this.cache.get(AuthorizationCodeWithPKCEStrategy.cacheKey);\n        return token;\n    }\n    removeAccessToken() {\n        this.cache.remove(AuthorizationCodeWithPKCEStrategy.cacheKey);\n    }\n    async redirectOrVerifyToken() {\n        const hashParams = new URLSearchParams(window.location.search);\n        const code = hashParams.get(\"code\");\n        if (code) {\n            const token = await this.verifyAndExchangeCode(code);\n            this.removeCodeFromUrl();\n            return token;\n        }\n        this.redirectToSpotify();\n        return emptyAccessToken; // Redirected away at this point, just make TypeScript happy :)         \n    }\n    async redirectToSpotify() {\n        const verifier = AccessTokenHelpers.generateCodeVerifier(128);\n        const challenge = await AccessTokenHelpers.generateCodeChallenge(verifier);\n        const singleUseVerifier = { verifier, expiresOnAccess: true };\n        this.cache.setCacheItem(\"spotify-sdk:verifier\", singleUseVerifier);\n        const redirectTarget = await this.generateRedirectUrlForUser(this.scopes, challenge);\n        await this.configuration.redirectionStrategy.redirect(redirectTarget);\n    }\n    async verifyAndExchangeCode(code) {\n        const cachedItem = await this.cache.get(\"spotify-sdk:verifier\");\n        const verifier = cachedItem?.verifier;\n        if (!verifier) {\n            throw new Error(\"No verifier found in cache - can't validate query string callback parameters.\");\n        }\n        await this.configuration.redirectionStrategy.onReturnFromRedirect();\n        return await this.exchangeCodeForToken(code, verifier);\n    }\n    removeCodeFromUrl() {\n        const url = new URL(window.location.href);\n        url.searchParams.delete(\"code\");\n        const newUrl = url.search ? url.href : url.href.replace('?', '');\n        window.history.replaceState({}, document.title, newUrl);\n    }\n    async generateRedirectUrlForUser(scopes, challenge) {\n        const scope = scopes.join(' ');\n        const params = new URLSearchParams();\n        params.append(\"client_id\", this.clientId);\n        params.append(\"response_type\", \"code\");\n        params.append(\"redirect_uri\", this.redirectUri);\n        params.append(\"scope\", scope);\n        params.append(\"code_challenge_method\", \"S256\");\n        params.append(\"code_challenge\", challenge);\n        return `https://accounts.spotify.com/authorize?${params.toString()}`;\n    }\n    async exchangeCodeForToken(code, verifier) {\n        const params = new URLSearchParams();\n        params.append(\"client_id\", this.clientId);\n        params.append(\"grant_type\", \"authorization_code\");\n        params.append(\"code\", code);\n        params.append(\"redirect_uri\", this.redirectUri);\n        params.append(\"code_verifier\", verifier);\n        const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: params\n        });\n        const text = await result.text();\n        if (!result.ok) {\n            throw new Error(`Failed to exchange code for token: ${result.statusText}, ${text}`);\n        }\n        const json = JSON.parse(text);\n        return json;\n    }\n}\n", "export default class DefaultResponseDeserializer {\n    async deserialize(response) {\n        const text = await response.text();\n        if (text.length > 0) {\n            const json = JSON.parse(text);\n            return json;\n        }\n        return null;\n    }\n}\n", "export default class DefaultResponseValidator {\n    async validateResponse(response) {\n        switch (response.status) {\n            case 401:\n                throw new Error(\"Bad or expired token. This can happen if the user revoked a token or the access token has expired. You should re-authenticate the user.\");\n            case 403:\n                const body = await response.text();\n                throw new Error(`Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here. Body: ${body}`);\n            case 429:\n                throw new Error(\"The app has exceeded its rate limits.\");\n            default:\n                if (!response.status.toString().startsWith('20')) {\n                    const body = await response.text();\n                    throw new Error(`Unrecognised response code: ${response.status} - ${response.statusText}. Body: ${body}`);\n                }\n        }\n    }\n}\n", "export default class NoOpErrorHandler {\n    async handleErrors(_) {\n        return false;\n    }\n}\n", "export default class DocumentLocationRedirectionStrategy {\n    async redirect(targetUrl) {\n        document.location = targetUrl.toString();\n    }\n    async onReturnFromRedirect() {\n    }\n}\n", "import { isEmptyAccessToken } from \"../auth/IAuthStrategy.js\";\nexport default class GenericCache {\n    storage;\n    updateFunctions;\n    autoRenewInterval;\n    autoRenewWindow;\n    constructor(storage, updateFunctions = new Map(), autoRenewInterval = 0, autoRenewWindow = 2 * 60 * 1000 // Two minutes\n    ) {\n        this.storage = storage;\n        this.updateFunctions = updateFunctions;\n        this.autoRenewInterval = autoRenewInterval;\n        this.autoRenewWindow = autoRenewWindow;\n        if (this.autoRenewInterval > 0) {\n            setInterval(() => this.autoRenewRenewableItems(), this.autoRenewInterval);\n        }\n    }\n    async getOrCreate(cacheKey, createFunction, updateFunction) {\n        if (updateFunction) {\n            this.updateFunctions.set(cacheKey, updateFunction);\n        }\n        const item = await this.get(cacheKey);\n        if (item) {\n            return item;\n        }\n        const newCacheItem = await createFunction();\n        if (!newCacheItem) {\n            throw new Error(\"Could not create cache item\");\n        }\n        if (!isEmptyAccessToken(newCacheItem)) {\n            this.setCacheItem(cacheKey, newCacheItem);\n        }\n        return newCacheItem;\n    }\n    async get(cacheKey) {\n        let asString = this.storage.get(cacheKey);\n        let cachedItem = asString ? JSON.parse(asString) : null;\n        if (this.itemDueToExpire(cachedItem) && this.updateFunctions.has(cacheKey)) {\n            const updateFunction = this.updateFunctions.get(cacheKey);\n            await this.tryUpdateItem(cacheKey, cachedItem, updateFunction);\n            // Ensure updated item is returned\n            asString = this.storage.get(cacheKey);\n            cachedItem = asString ? JSON.parse(asString) : null;\n        }\n        if (!cachedItem) {\n            return null;\n        }\n        if (cachedItem.expires && (cachedItem.expires === -1 || cachedItem.expires <= Date.now())) {\n            this.remove(cacheKey);\n            return null;\n        }\n        if (cachedItem.expiresOnAccess && cachedItem.expiresOnAccess === true) {\n            this.remove(cacheKey);\n            return cachedItem;\n        }\n        return cachedItem;\n    }\n    set(cacheKey, value, expiresIn) {\n        const expires = Date.now() + expiresIn;\n        const cacheItem = { ...value, expires };\n        this.setCacheItem(cacheKey, cacheItem);\n    }\n    setCacheItem(cacheKey, cacheItem) {\n        const asString = JSON.stringify(cacheItem);\n        this.storage.set(cacheKey, asString);\n    }\n    remove(cacheKey) {\n        this.storage.remove(cacheKey);\n    }\n    itemDueToExpire(item) {\n        if (!item) {\n            return false;\n        }\n        if (!item.expires) {\n            return false;\n        }\n        return item.expires - Date.now() < (this.autoRenewWindow);\n    }\n    async autoRenewRenewableItems() {\n        this.updateFunctions.forEach(async (updateFunction, key) => {\n            const cachedItem = await this.get(key);\n            if (!cachedItem) {\n                return;\n            }\n            if (updateFunction && this.itemDueToExpire(cachedItem)) {\n                await this.tryUpdateItem(key, cachedItem, updateFunction);\n            }\n        });\n    }\n    async tryUpdateItem(key, cachedItem, updateFunction) {\n        try {\n            const updated = await updateFunction(cachedItem);\n            if (updated) {\n                this.setCacheItem(key, updated);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\n", "import GenericCache from \"./GenericCache.js\";\nexport default class LocalStorageCachingStrategy extends GenericCache {\n    constructor() {\n        super(new LocalStorageCacheStore());\n    }\n}\nclass LocalStorageCacheStore {\n    get(key) {\n        return localStorage.getItem(key);\n    }\n    set(key, value) {\n        localStorage.setItem(key, value);\n    }\n    remove(key) {\n        localStorage.removeItem(key);\n    }\n}\n", "import GenericCache from \"./GenericCache.js\";\nexport default class InMemoryCachingStrategy extends GenericCache {\n    constructor() {\n        super(new DictionaryCacheStore());\n    }\n}\nclass DictionaryCacheStore {\n    cache = new Map();\n    get(key) {\n        return this.cache.get(key) ?? null;\n    }\n    set(key, value) {\n        this.cache.set(key, value);\n    }\n    remove(key) {\n        this.cache.delete(key);\n    }\n}\n", "import AccessTokenHelpers from \"./AccessTokenHelpers.js\";\n/**\n * This strategy is used when you already have an access token and want to use it.\n * The authentication strategy will automatically renew the token when it expires.\n * Designed to allow a browser-based-app to post the access token to the server and use it from there.\n * @constructor\n * @param {string} clientId - Spotify application client id.\n * @param {string} accessToken - The access token returned from a client side Authorization Code with PKCE flow.\n */\nexport default class ProvidedAccessTokenStrategy {\n    clientId;\n    accessToken;\n    refreshTokenAction;\n    constructor(clientId, accessToken, refreshTokenAction) {\n        this.clientId = clientId;\n        this.accessToken = accessToken;\n        this.refreshTokenAction = refreshTokenAction || AccessTokenHelpers.refreshCachedAccessToken;\n        // If the raw token from the jwt response is provided here\n        // Calculate an absolute `expiry` value.\n        // Caveat: If this token isn't fresh, this value will be off.\n        // It's the responsibility of the calling code to either set a valid\n        // expires property, or ensure expires_in accounts for any lag between\n        // issuing and passing here.\n        if (!this.accessToken.expires) {\n            this.accessToken.expires = AccessTokenHelpers.calculateExpiry(this.accessToken);\n        }\n    }\n    setConfiguration(_) {\n    }\n    async getOrCreateAccessToken() {\n        if (this.accessToken.expires && this.accessToken.expires <= Date.now()) {\n            const refreshed = await this.refreshTokenAction(this.clientId, this.accessToken);\n            this.accessToken = refreshed;\n        }\n        return this.accessToken;\n    }\n    async getAccessToken() {\n        return this.accessToken;\n    }\n    removeAccessToken() {\n        this.accessToken = {\n            access_token: \"\",\n            token_type: \"\",\n            expires_in: 0,\n            refresh_token: \"\",\n            expires: 0\n        };\n    }\n}\n", "import AlbumsEndpoints from \"./endpoints/AlbumsEndpoints.js\";\nimport ArtistsEndpoints from \"./endpoints/ArtistsEndpoints.js\";\nimport AudiobooksEndpoints from \"./endpoints/AudiobooksEndpoints.js\";\nimport BrowseEndpoints from \"./endpoints/BrowseEndpoints.js\";\nimport ChaptersEndpoints from \"./endpoints/ChaptersEndpoints.js\";\nimport EpisodesEndpoints from \"./endpoints/EpisodesEndpoints.js\";\nimport RecommendationsEndpoints from \"./endpoints/RecommendationsEndpoints.js\";\nimport MarketsEndpoints from \"./endpoints/MarketsEndpoints.js\";\nimport PlayerEndpoints from \"./endpoints/PlayerEndpoints.js\";\nimport PlaylistsEndpoints from \"./endpoints/PlaylistsEndpoints.js\";\nimport SearchEndpoints from \"./endpoints/SearchEndpoints.js\";\nimport ShowsEndpoints from \"./endpoints/ShowsEndpoints.js\";\nimport TracksEndpoints from \"./endpoints/TracksEndpoints.js\";\nimport { isEmptyAccessToken } from \"./auth/IAuthStrategy.js\";\nimport UsersEndpoints from \"./endpoints/UsersEndpoints.js\";\nimport CurrentUserEndpoints from \"./endpoints/CurrentUserEndpoints.js\";\nimport ClientCredentialsStrategy from \"./auth/ClientCredentialsStrategy.js\";\nimport ImplicitGrantStrategy from \"./auth/ImplicitGrantStrategy.js\";\nimport AuthorizationCodeWithPKCEStrategy from \"./auth/AuthorizationCodeWithPKCEStrategy.js\";\nimport DefaultResponseDeserializer from \"./serialization/DefaultResponseDeserializer.js\";\nimport DefaultResponseValidator from \"./responsevalidation/DefaultResponseValidator.js\";\nimport NoOpErrorHandler from \"./errorhandling/NoOpErrorHandler.js\";\nimport DocumentLocationRedirectionStrategy from \"./redirection/DocumentLocationRedirectionStrategy.js\";\nimport LocalStorageCachingStrategy from \"./caching/LocalStorageCachingStrategy.js\";\nimport InMemoryCachingStrategy from \"./caching/InMemoryCachingStrategy.js\";\nimport ProvidedAccessTokenStrategy from \"./auth/ProvidedAccessTokenStrategy.js\";\nexport class SpotifyApi {\n    sdkConfig;\n    static rootUrl = \"https://api.spotify.com/v1/\";\n    authenticationStrategy;\n    albums;\n    artists;\n    audiobooks;\n    browse;\n    chapters;\n    episodes;\n    recommendations;\n    markets;\n    player;\n    playlists;\n    shows;\n    tracks;\n    users;\n    search;\n    currentUser;\n    constructor(authentication, config) {\n        this.sdkConfig = this.initializeSdk(config);\n        this.albums = new AlbumsEndpoints(this);\n        this.artists = new ArtistsEndpoints(this);\n        this.audiobooks = new AudiobooksEndpoints(this);\n        this.browse = new BrowseEndpoints(this);\n        this.chapters = new ChaptersEndpoints(this);\n        this.episodes = new EpisodesEndpoints(this);\n        this.recommendations = new RecommendationsEndpoints(this);\n        this.markets = new MarketsEndpoints(this);\n        this.player = new PlayerEndpoints(this);\n        this.playlists = new PlaylistsEndpoints(this);\n        this.shows = new ShowsEndpoints(this);\n        this.tracks = new TracksEndpoints(this);\n        this.users = new UsersEndpoints(this);\n        this.currentUser = new CurrentUserEndpoints(this);\n        const search = new SearchEndpoints(this);\n        this.search = search.execute.bind(search);\n        this.authenticationStrategy = authentication;\n        this.authenticationStrategy.setConfiguration(this.sdkConfig);\n    }\n    async makeRequest(method, url, body = undefined, contentType = undefined) {\n        try {\n            const accessToken = await this.authenticationStrategy.getOrCreateAccessToken();\n            if (isEmptyAccessToken(accessToken)) {\n                console.warn(\"No access token found, authenticating now.\");\n                return null;\n            }\n            const token = accessToken?.access_token;\n            const fullUrl = SpotifyApi.rootUrl + url;\n            const opts = {\n                method: method,\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": contentType ?? \"application/json\"\n                },\n                body: body ? typeof body === \"string\" ? body : JSON.stringify(body) : undefined\n            };\n            this.sdkConfig.beforeRequest(fullUrl, opts);\n            const result = await this.sdkConfig.fetch(fullUrl, opts);\n            this.sdkConfig.afterRequest(fullUrl, opts, result);\n            if (result.status === 204) {\n                return null;\n            }\n            await this.sdkConfig.responseValidator.validateResponse(result);\n            return this.sdkConfig.deserializer.deserialize(result);\n        }\n        catch (error) {\n            const handled = await this.sdkConfig.errorHandler.handleErrors(error);\n            if (!handled) {\n                throw error;\n            }\n            return null;\n        }\n    }\n    initializeSdk(config) {\n        const isBrowser = typeof window !== 'undefined';\n        const defaultConfig = {\n            fetch: (req, init) => fetch(req, init),\n            beforeRequest: (_, __) => { },\n            afterRequest: (_, __, ___) => { },\n            deserializer: new DefaultResponseDeserializer(),\n            responseValidator: new DefaultResponseValidator(),\n            errorHandler: new NoOpErrorHandler(),\n            redirectionStrategy: new DocumentLocationRedirectionStrategy(),\n            cachingStrategy: isBrowser\n                ? new LocalStorageCachingStrategy()\n                : new InMemoryCachingStrategy()\n        };\n        return { ...defaultConfig, ...config };\n    }\n    switchAuthenticationStrategy(authentication) {\n        this.authenticationStrategy = authentication;\n        this.authenticationStrategy.setConfiguration(this.sdkConfig);\n        this.authenticationStrategy.getOrCreateAccessToken(); // trigger any redirects \n    }\n    /**\n     * Use this when you're running in a browser and you want to control when first authentication+redirect happens.\n    */\n    async authenticate() {\n        const response = await this.authenticationStrategy.getOrCreateAccessToken(); // trigger any redirects\n        return {\n            authenticated: response.expires > Date.now() && !isEmptyAccessToken(response),\n            accessToken: response\n        };\n    }\n    /**\n     * @returns the current access token. null implies the SpotifyApi is not yet authenticated.\n     */\n    async getAccessToken() {\n        return this.authenticationStrategy.getAccessToken();\n    }\n    /**\n     * Removes the access token if it exists.\n     */\n    logOut() {\n        this.authenticationStrategy.removeAccessToken();\n    }\n    static withUserAuthorization(clientId, redirectUri, scopes = [], config) {\n        const strategy = new AuthorizationCodeWithPKCEStrategy(clientId, redirectUri, scopes);\n        return new SpotifyApi(strategy, config);\n    }\n    static withClientCredentials(clientId, clientSecret, scopes = [], config) {\n        const strategy = new ClientCredentialsStrategy(clientId, clientSecret, scopes);\n        return new SpotifyApi(strategy, config);\n    }\n    static withImplicitGrant(clientId, redirectUri, scopes = [], config) {\n        const strategy = new ImplicitGrantStrategy(clientId, redirectUri, scopes);\n        return new SpotifyApi(strategy, config);\n    }\n    /**\n     * Use this when you're running in a Node environment, and accepting the access token from a client-side `performUserAuthorization` call.\n     * You can also use this method if you already have an access token and don't want to use the built-in authentication strategies.\n     */\n    static withAccessToken(clientId, token, config) {\n        const strategy = new ProvidedAccessTokenStrategy(clientId, token);\n        return new SpotifyApi(strategy, config);\n    }\n    static async performUserAuthorization(clientId, redirectUri, scopes, onAuthorizationOrUrl, config) {\n        const strategy = new AuthorizationCodeWithPKCEStrategy(clientId, redirectUri, scopes);\n        const client = new SpotifyApi(strategy, config);\n        const accessToken = await client.authenticationStrategy.getOrCreateAccessToken();\n        if (!isEmptyAccessToken(accessToken)) {\n            if (typeof onAuthorizationOrUrl === \"string\") {\n                console.log(\"Posting access token to postback URL.\");\n                await fetch(onAuthorizationOrUrl, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(accessToken)\n                });\n            }\n            else {\n                await onAuthorizationOrUrl(accessToken);\n            }\n        }\n        return {\n            authenticated: accessToken.expires > Date.now() && !isEmptyAccessToken(accessToken),\n            accessToken\n        };\n    }\n}\n", "export default class ConsoleLoggingErrorHandler {\n    async handleErrors(error) {\n        console.log(error);\n        return false;\n    }\n}\n", "export class Scopes {\n    static get playlist() {\n        return [\n            ...Scopes.playlistRead,\n            ...Scopes.playlistModify\n        ];\n    }\n    static get playlistRead() {\n        return [\n            \"playlist-read-private\",\n            \"playlist-read-collaborative\",\n        ];\n    }\n    static get playlistModify() {\n        return [\n            \"playlist-modify-public\",\n            \"playlist-modify-private\",\n            \"ugc-image-upload\"\n        ];\n    }\n    static get userDetails() {\n        return [\n            \"user-read-private\",\n            \"user-read-email\",\n        ];\n    }\n    static get userLibrary() {\n        return [\n            ...Scopes.userLibraryRead,\n            ...Scopes.userLibraryModify\n        ];\n    }\n    static get userLibraryRead() {\n        return [\n            \"user-library-read\",\n        ];\n    }\n    static get userLibraryModify() {\n        return [\n            \"user-library-modify\",\n        ];\n    }\n    static get userRecents() {\n        return [\n            \"user-top-read\",\n            \"user-read-recently-played\",\n        ];\n    }\n    static get userFollow() {\n        return [\n            ...Scopes.userFollowRead,\n            ...Scopes.userFollowModify\n        ];\n    }\n    static get userFollowRead() {\n        return [\n            \"user-follow-read\",\n        ];\n    }\n    static get userFollowModify() {\n        return [\n            \"user-follow-modify\",\n        ];\n    }\n    static get userPlayback() {\n        return [\n            ...Scopes.userPlaybackRead,\n            ...Scopes.userPlaybackModify\n        ];\n    }\n    static get userPlaybackRead() {\n        return [\n            \"user-read-playback-position\",\n            \"user-read-playback-state\",\n            \"user-read-currently-playing\",\n        ];\n    }\n    static get userPlaybackModify() {\n        return [\n            \"user-modify-playback-state\",\n            \"app-remote-control\",\n            \"streaming\"\n        ];\n    }\n    static get all() {\n        return [\n            ...Scopes.userDetails,\n            ...Scopes.playlist,\n            ...Scopes.userLibrary,\n            ...Scopes.userRecents,\n            ...Scopes.userFollow,\n            ...Scopes.userPlayback,\n        ];\n    }\n}\n"],
  "mappings": "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",
  "names": ["params", "params", "params", "params", "params", "params", "token", "token", "token", "body"]
}
